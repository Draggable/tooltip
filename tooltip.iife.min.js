
/**
@draggable/tooltip - https://github.com/Draggable/tooltip
Version: 1.0.1
Author: Draggable https://draggable.io
*/


var tooltip=function(t){"use strict";var i=Object.defineProperty,e=(t,e,o)=>((t,e,o)=>e in t?i(t,e,{enumerable:!0,configurable:!0,writable:!0,value:o}):t[e]=o)(t,"symbol"!=typeof e?e+"":e,o);const o="MYkh1v7x",s={"tooltip-trigger":o,tooltipTrigger:o,tooltip:"_3x4ZIcu-",visible:"JIt36hCJ"},l={triggerName:"tooltip"};class n{constructor(t=l){e(this,"options"),e(this,"tooltip"),e(this,"activeTriggerType",null),this.options=t,this.tooltip=document.createElement("div"),this.tooltip.className=s.tooltip,document.body.appendChild(this.tooltip),this.setupEventListeners()}setupEventListeners(){const t=`data-${this.options.triggerName}`;document.addEventListener("mouseover",(i=>{const e=i.target.closest(`[${t}]`);if("click"!==this.activeTriggerType&&"click"!==(null==e?void 0:e.getAttribute(`${t}-type`))){const i=null==e?void 0:e.getAttribute(`${t}`);i&&(this.show(e,i),this.activeTriggerType="hover")}})),document.addEventListener("mouseout",(i=>{const e=i.target.closest(`[${t}]`);"click"!==this.activeTriggerType&&"click"!==(null==e?void 0:e.getAttribute(`${t}-type`))&&this.hide()})),document.addEventListener("click",(i=>{const e=i.target.closest(`[${t}][${t}-type="click"]`);if(e)if(this.isVisible())this.hide();else{const i=e.getAttribute(`${t}`);this.show(e,i),this.activeTriggerType="click"}else this.hide()}))}isVisible(){return this.tooltip.classList.contains(s.visible)}calculatePosition(t){const i=t.getBoundingClientRect(),e=this.tooltip.getBoundingClientRect(),o=[{name:"top",x:i.left+(i.width-e.width)/2,y:i.top-e.height-12},{name:"bottom",x:i.left+(i.width-e.width)/2,y:i.bottom+12},{name:"right",x:i.right+12,y:i.top+(i.height-e.height)/2},{name:"left",x:i.left-e.width-12,y:i.top+(i.height-e.height)/2}];for(const s of o)if(this.fitsInViewport(s.x,s.y,e.width,e.height))return s;return o[0]}fitsInViewport(t,i,e,o){return t>=0&&i>=0&&t+e<=window.innerWidth&&i+o<=window.innerHeight}show(t,i){this.tooltip.innerHTML=i??"",this.tooltip.classList.add(s.visible);const e=this.calculatePosition(t);this.tooltip.style.left=`${e.x}px`,this.tooltip.style.top=`${e.y}px`,this.tooltip.dataset.position=e.name}hide(){this.tooltip.classList.remove(s.visible),this.activeTriggerType=null}}return t.SmartTooltip=n,t.default=n,Object.defineProperties(t,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}}),t}({});
