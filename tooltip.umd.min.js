
/**
@draggable/tooltip - https://github.com/Draggable/tooltip
Version: 1.1.1
Author: Draggable https://draggable.io
*/


!function(){"use strict";try{if("undefined"!=typeof document){var t=document.createElement("style");t.appendChild(document.createTextNode('._3x4ZIcu-{position:absolute;background:#1f2937;color:#fff;padding:.75rem;border-radius:.375rem;max-width:200px;z-index:50;visibility:hidden;opacity:0;transition:opacity .2s}._3x4ZIcu-.JIt36hCJ{visibility:visible;opacity:1}._3x4ZIcu-:before{content:"";position:absolute;width:0;height:0;border:6px solid transparent}._3x4ZIcu-[data-position=top]:before{border-top-color:#1f2937;bottom:-12px;left:50%;transform:translate(-50%)}._3x4ZIcu-[data-position=bottom]:before{border-bottom-color:#1f2937;top:-12px;left:50%;transform:translate(-50%)}._3x4ZIcu-[data-position=left]:before{border-left-color:#1f2937;right:-12px;top:50%;transform:translateY(-50%)}._3x4ZIcu-[data-position=right]:before{border-right-color:#1f2937;left:-12px;top:50%;transform:translateY(-50%)}')),document.head.appendChild(t)}}catch(o){console.error("vite-plugin-css-injected-by-js",o)}}();
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).tooltip={})}(this,(function(t){"use strict";var e=Object.defineProperty,i=(t,i,s)=>((t,i,s)=>i in t?e(t,i,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[i]=s)(t,"symbol"!=typeof i?i+"":i,s);const s="_3x4ZIcu-",o="JIt36hCJ",n={triggerName:"tooltip"};class h{constructor(t=n){i(this,"triggerName"),i(this,"tooltip"),i(this,"activeTriggerType",null),i(this,"spacing",12),i(this,"handleClick",(t=>{const e=this.triggerName,i=t.target.closest(`[${e}][${e}-type="click"]`);if(i)if(this.isVisible())this.hide();else{const t=i.getAttribute(`${e}`);this.show(i,t),this.activeTriggerType="click"}else this.hide()})),i(this,"handleMouseOver",(t=>{const e=this.triggerName,i=t.target.closest(`[${e}]`);if("click"!==this.activeTriggerType&&"click"!==(null==i?void 0:i.getAttribute(`${e}-type`))){const t=null==i?void 0:i.getAttribute(`${e}`);t&&(this.show(i,t),this.activeTriggerType="hover")}})),i(this,"handleMouseOut",(t=>{const e=this.triggerName,i=t.target.closest(`[${e}]`);"click"!==this.activeTriggerType&&"click"!==(null==i?void 0:i.getAttribute(`${e}-type`))&&this.hide()})),i(this,"handleResize",(()=>{this.isVisible()&&this.hide()})),i(this,"handleScroll",(()=>{this.isVisible()&&this.hide()})),this.triggerName=`data-${t.triggerName}`,this.tooltip=document.createElement("div"),this.tooltip.className=s,document.body.appendChild(this.tooltip),this.setupEventListeners()}setupEventListeners(){document.addEventListener("mouseover",this.handleMouseOver),document.addEventListener("mouseout",this.handleMouseOut),document.addEventListener("click",this.handleClick),window.addEventListener("resize",this.handleResize),window.addEventListener("scroll",this.handleScroll,!0)}isVisible(){return this.tooltip.classList.contains(o)}calculatePosition(t){const e=t.getBoundingClientRect(),i=this.tooltip.getBoundingClientRect(),s=[{name:"top",x:e.left+(e.width-i.width)/2,y:e.top-i.height-this.spacing},{name:"bottom",x:e.left+(e.width-i.width)/2,y:e.bottom+this.spacing},{name:"left",x:e.left-i.width-this.spacing,y:e.top+(e.height-i.height)/2},{name:"right",x:e.right+this.spacing,y:e.top+(e.height-i.height)/2}];return s.find((t=>this.fitsInViewport(t,i)))||s[0]}fitsInViewport(t,e){return t.x>=0&&t.y>=0&&t.x+e.width<=window.innerWidth&&t.y+e.height<=window.innerHeight}show(t,e){this.tooltip.innerHTML=e??"",this.tooltip.classList.add(o);const i=this.calculatePosition(t);this.tooltip.style.left=`${i.x}px`,this.tooltip.style.top=`${i.y}px`,this.tooltip.dataset.position=i.name}hide(){this.tooltip.classList.remove(o),this.activeTriggerType=null}destroy(){document.removeEventListener("mouseover",this.handleMouseOver),document.removeEventListener("mouseout",this.handleMouseOut),document.removeEventListener("click",this.handleClick),window.removeEventListener("resize",this.handleResize),window.removeEventListener("scroll",this.handleScroll,!0),this.tooltip.remove()}}void 0!==window&&(window.SmartTooltip=h),t.SmartTooltip=h,t.default=h,Object.defineProperties(t,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
